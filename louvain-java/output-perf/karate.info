-------------------------------------
Modularity Optimizer
Version 1.3.0
by Ludo Waltman and Nees Jan van Eck
-------------------------------------
Reading input file...
Finish reading input file.

Number of nodes: 34
Number of edges: 78
Running Louvain algorithm - performance
Scaling parameter V: 1
Meaningful maximum M: 1

Performance of unaltered graph: 0.8609625668449198

Iteration: 1

	Pass 0
	network size: 34 nodes, 78 edges
	start computation: 01/18/2016 22:30:38
	end computation: 01/18/2016 22:30:38
	Updated M from 1.0 to 5.0

	Pass 1
	network size: 20 nodes, 29 edges
	start computation: 01/18/2016 22:30:38
	end computation: 01/18/2016 22:30:38

	Pass 2
	network size: 19 nodes, 24 edges
	start computation: 01/18/2016 22:30:38
	end computation: 01/18/2016 22:30:38

	Pass 3
	network size: 18 nodes, 21 edges
	start computation: 01/18/2016 22:30:38
	end computation: 01/18/2016 22:30:38

	Pass 4
	network size: 17 nodes, 19 edges
	start computation: 01/18/2016 22:30:38
	end computation: 01/18/2016 22:30:38

	Pass 5
	network size: 16 nodes, 17 edges
	start computation: 01/18/2016 22:30:38
	end computation: 01/18/2016 22:30:38

	Pass 6
	network size: 15 nodes, 16 edges
	start computation: 01/18/2016 22:30:38
	end computation: 01/18/2016 22:30:38

	Pass 7
	network size: 14 nodes, 15 edges
	start computation: 01/18/2016 22:30:38
	end computation: 01/18/2016 22:30:38

Iteration 1 performance: 0.7344

Writing to ../output-perf/karate.tree...
Finished writing to ../output-perf/karate.tree.

Calculating the best overall clustering for all passes...
Best clustering is Pass 0 with performance: 0.9055
Writing to ../output-perf/karate.perfgraph...
Finished writing to ../output-perf/karate.perfgraph.

Maximum performance in 1 random starts: 0.7344
Number of communities: 14
Elapsed time: 0 seconds

Writing to .graph...
Finish writing to .graph.
