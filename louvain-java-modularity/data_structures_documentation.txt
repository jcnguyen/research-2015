firstNeighborIndex
	-a protected int array
	- length nNodes + 1
	- firstNeighborIndex[i]-firstNeighborValue[i-1] = nNeighbors[i-1]
	- value of last spot of array is |E|, nEdges
	- the range firstNeighborIndex[i] to firstNeighborValue[i-1] allows you to index into neighbor. This range exactly corresponds to one of the sections that is chunked by vertex. That's why when you iterate from neighbor[firstNeighborValue[i]] to neighbr[firstNeighborValue[i-1]], you're looking at all the edges with start vertex i.

neighbor
	- a protected int array 
	- length nEdges
	- i'th spot is the destination vertex d of the edge between v_i and d
	- chunked by start vertex

edgeWeight
	- protected double array
	- length nEdges
	- the i'th spot is the weight of the edge at neighbor[i]
	- edgeWeight2 and neighbor correspond to each other

nNeighbors
	- int array
	- length nNodes
	- i'th place is the number of neighbors that node i has

edgeWeight1
	- edge weights from reading in the input file


node1 and node2 are int arrays that store the input from the graph input fule. For some edge e, node1[e] stores the start vertex, and node2[e] stores the destination vertex. It is enforced that start vertex < destination vertex.